<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="http://blog.ilmsg.in.th/feed.xml" rel="self" type="application/atom+xml" /><link href="http://blog.ilmsg.in.th/" rel="alternate" type="text/html" /><updated>2024-05-11T13:04:33+07:00</updated><id>http://blog.ilmsg.in.th/feed.xml</id><title type="html">blog - ilmsg.in.th</title><subtitle>blog สำหรับจดบันทึก เรียนรู้เกี่ยวกับ it คอมพิวเตอร์.</subtitle><entry><title type="html">Spring Boot Cloud Server and Client</title><link href="http://blog.ilmsg.in.th/spring/boot/cloud/2024/03/13/spring-boot-cloud.html" rel="alternate" type="text/html" title="Spring Boot Cloud Server and Client" /><published>2024-03-13T11:49:16+07:00</published><updated>2024-03-13T11:49:16+07:00</updated><id>http://blog.ilmsg.in.th/spring/boot/cloud/2024/03/13/spring-boot-cloud</id><content type="html" xml:base="http://blog.ilmsg.in.th/spring/boot/cloud/2024/03/13/spring-boot-cloud.html"><![CDATA[<p>spring cloud eureka server</p>

<p><img src="../images/2024-05-11_125130.png" alt="../images/2024-05-11_125130.png" /></p>

<p>ไพล์ <code class="language-plaintext highlighter-rouge">pom.xml</code> จะเพิ่ม dependencies ที่เป็น eureka server เข้ามา</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;dependencies&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;
        &lt;artifactId&gt;spring-cloud-starter-netflix-eureka-server&lt;/artifactId&gt;
    &lt;/dependency&gt;
&lt;/dependencies&gt;
</code></pre></div></div>

<p>ไพล์ <code class="language-plaintext highlighter-rouge">application.properties</code> ตั้งค่าไว้แบบนี้</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>spring.application.name=spring-cloud-eureka-server

eureka.client.register-with-eureka=false
eureka.client.fetch-registry=false
server.port=8761
</code></pre></div></div>

<p>ไพล์ <code class="language-plaintext highlighter-rouge">SpringCloudEurekaServerApplication.java</code>  เราจะเพิ่ม Annotations <code class="language-plaintext highlighter-rouge">@EnableEurekaServer</code> เข้ามาตัวนึง</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>package com.ilmsg.springcloudeurekaserver;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.cloud.netflix.eureka.server.EnableEurekaServer;

@EnableEurekaServer
@SpringBootApplication
public class SpringCloudEurekaServerApplication {
    public static void main(String[] args) {
        SpringApplication.run(SpringCloudEurekaServerApplication.class, args);
    }
}
</code></pre></div></div>

<hr />

<p>spring cloud cart service <code class="language-plaintext highlighter-rouge">pom.xml</code></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;dependencies&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
        &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;
        &lt;artifactId&gt;spring-cloud-starter-netflix-eureka-client&lt;/artifactId&gt;
    &lt;/dependency&gt;
&lt;/dependencies&gt;
</code></pre></div></div>

<hr />

<p>spring cloud payment service <code class="language-plaintext highlighter-rouge">pom.xml</code></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;dependencies&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
        &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;
        &lt;artifactId&gt;spring-cloud-starter-netflix-eureka-client&lt;/artifactId&gt;
    &lt;/dependency&gt;
&lt;/dependencies&gt;
</code></pre></div></div>]]></content><author><name></name></author><category term="spring" /><category term="boot" /><category term="cloud" /><summary type="html"><![CDATA[spring cloud eureka server]]></summary></entry><entry><title type="html">Nginx load balance - round robin</title><link href="http://blog.ilmsg.in.th/nginx/load/balance/2024/02/03/nginx-load-balance.html" rel="alternate" type="text/html" title="Nginx load balance - round robin" /><published>2024-02-03T15:23:18+07:00</published><updated>2024-02-03T15:23:18+07:00</updated><id>http://blog.ilmsg.in.th/nginx/load/balance/2024/02/03/nginx-load-balance</id><content type="html" xml:base="http://blog.ilmsg.in.th/nginx/load/balance/2024/02/03/nginx-load-balance.html"><![CDATA[<p>nginx ทำ load balance ด้วย round robin</p>

<p>ได้ยินมานานแล้ว เรื่องการทำ load balance เพื่อที่จะให้เว็บไซต์ของเรา รองรับการเข้าชมจากผู้ใช้งานจำนวนมาก</p>

<p>อย่างเช่น มีเครื่อง server สัก 3 เครื่องทำงานอยู่ ถ้ามีเครื่องไหนล่มไป ก็ยังเหลืออีก 2 เครื่องที่ยังทำงานได้ต่อ, ผู้ใช้งานก็ยังเข้าชมเว็บไซต์ได้ปกติ</p>

<p>คำว่า round robin มันหมายถึง หมุนเป็นวงกลม แล้วตัว nginx proxy ก็ทำงานเป็นแบบนั้นเลย, user ที่เข้าเว็บมา จะเจอ nginx เป็นอันดับแรก และทำหน้าที่เป็น proxy พาไป server ที่ config เอาไว้แต่ละเครื่อง แล้วจะพาหมุนไปเรื่อยๆ, 1 คน(reqeust) ต่อ 1 เครื่อง เลย</p>

<p>เรารัน <code class="language-plaintext highlighter-rouge">docker compose up -d</code> ขึ้นมาแล้ว, เราก็เข้าหน้าเว็บ <a href="http://webapp.local:3000">http://webapp.local:3000</a>, <a href="http://localhost:3000">http://localhost:3000</a> ได้เลย, แล้วกด(F5) refresh หน้าเว็บไซต์, เราจะได้ผลลัพธ์ key ว่ามาจากเครื่องไหน, สังเกตุได้ว่า key จะเปลี่ยนหมุนวนไปเรื่อยๆ</p>

<p><img src="https://github.com/ilmsg/nginx-load-balance/blob/main/images/2023-12-29_130616.png?raw=true" alt="https://github.com/ilmsg/nginx-load-balance/blob/main/images/2023-12-29_130616.png?raw=true" /></p>

<p><img src="https://github.com/ilmsg/nginx-load-balance/blob/main/images/2023-12-29_130629.png?raw=true" alt="https://github.com/ilmsg/nginx-load-balance/blob/main/images/2023-12-29_130629.png?raw=true" /></p>

<p><img src="https://github.com/ilmsg/nginx-load-balance/blob/main/images/2023-12-29_130638.png?raw=true" alt="https://github.com/ilmsg/nginx-load-balance/blob/main/images/2023-12-29_130638.png?raw=true" /></p>

<p>ตัวอย่างที่ทำ มีเครื่องมือที่ใช้เป็น docker, nginx, golang</p>

<p><a href="https://github.com/ilmsg/nginx-load-balance">https://github.com/ilmsg/nginx-load-balance</a></p>]]></content><author><name></name></author><category term="nginx" /><category term="load" /><category term="balance" /><summary type="html"><![CDATA[nginx ทำ load balance ด้วย round robin]]></summary></entry><entry><title type="html">Welcome to Jekyll!</title><link href="http://blog.ilmsg.in.th/jekyll/update/2024/02/03/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2024-02-03T14:08:18+07:00</published><updated>2024-02-03T14:08:18+07:00</updated><id>http://blog.ilmsg.in.th/jekyll/update/2024/02/03/welcome-to-jekyll</id><content type="html" xml:base="http://blog.ilmsg.in.th/jekyll/update/2024/02/03/welcome-to-jekyll.html"><![CDATA[<p>You’ll find this post in your <code class="language-plaintext highlighter-rouge">_posts</code> directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run <code class="language-plaintext highlighter-rouge">jekyll serve</code>, which launches a web server and auto-regenerates your site when a file is updated.</p>

<p>Jekyll requires blog post files to be named according to the following format:</p>

<p><code class="language-plaintext highlighter-rouge">YEAR-MONTH-DAY-title.MARKUP</code></p>

<p>Where <code class="language-plaintext highlighter-rouge">YEAR</code> is a four-digit number, <code class="language-plaintext highlighter-rouge">MONTH</code> and <code class="language-plaintext highlighter-rouge">DAY</code> are both two-digit numbers, and <code class="language-plaintext highlighter-rouge">MARKUP</code> is the file extension representing the format used in the file. After that, include the necessary front matter. Take a look at the source for this post to get an idea about how it works.</p>

<p>Jekyll also offers powerful support for code snippets:</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="k">def</span> <span class="nf">print_hi</span><span class="p">(</span><span class="nb">name</span><span class="p">)</span>
  <span class="nb">puts</span> <span class="s2">"Hi, </span><span class="si">#{</span><span class="nb">name</span><span class="si">}</span><span class="s2">"</span>
<span class="k">end</span>
<span class="n">print_hi</span><span class="p">(</span><span class="s1">'Tom'</span><span class="p">)</span>
<span class="c1">#=&gt; prints 'Hi, Tom' to STDOUT.</span></code></pre></figure>

<p>Check out the <a href="https://jekyllrb.com/docs/home">Jekyll docs</a> for more info on how to get the most out of Jekyll. File all bugs/feature requests at <a href="https://github.com/jekyll/jekyll">Jekyll’s GitHub repo</a>. If you have questions, you can ask them on <a href="https://talk.jekyllrb.com/">Jekyll Talk</a>.</p>]]></content><author><name></name></author><category term="jekyll" /><category term="update" /><summary type="html"><![CDATA[You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.]]></summary></entry></feed>